# This block defines a "pool" of upstream servers our proxy can talk to.
# 'upstream' is the NGINX term for the backend application servers.
upstream taskmanager_api {
    # We will name our Node.js service 'app' in the docker-compose file,
    # and it runs on port 3000 inside the Docker network.
    server app:3000;
}

server {
    # NGINX will listen for public traffic on port 80 (the standard HTTP port).
    listen 8080;

    # This is the main routing rule for all incoming requests.
    location / {
        # proxy_pass tells NGINX where to forward the request.
        # We point it to the 'taskmanager_api' upstream pool we defined above.
        proxy_pass http://taskmanager_api;

        # These headers are crucial. They pass along the original request information
        # (like the user's real IP address) to our backend Express application,
        # which is important for logging and security.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}